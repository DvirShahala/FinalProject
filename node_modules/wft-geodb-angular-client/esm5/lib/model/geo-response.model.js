/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * @template T
 */
var /**
 * @template T
 */
GeoResponse = /** @class */ (function () {
    function GeoResponse() {
        this.errors = new Array();
    }
    /**
     * @param {?} data
     * @param {?} metadata
     * @return {?}
     */
    GeoResponse.buildForData = /**
     * @param {?} data
     * @param {?} metadata
     * @return {?}
     */
    function (data, metadata) {
        /** @type {?} */
        var response = new GeoResponse();
        response.data = data;
        response.metadata = metadata;
        return response;
    };
    /**
     * @param {?} error
     * @return {?}
     */
    GeoResponse.buildForError = /**
     * @param {?} error
     * @return {?}
     */
    function (error) {
        /** @type {?} */
        var response = new GeoResponse();
        response.errors.push(error);
        return response;
    };
    /**
     * @param {?} errors
     * @return {?}
     */
    GeoResponse.buildForErrors = /**
     * @param {?} errors
     * @return {?}
     */
    function (errors) {
        var e_1, _a;
        /** @type {?} */
        var response = new GeoResponse();
        try {
            for (var errors_1 = tslib_1.__values(errors), errors_1_1 = errors_1.next(); !errors_1_1.done; errors_1_1 = errors_1.next()) {
                var error = errors_1_1.value;
                response.errors.push(error);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (errors_1_1 && !errors_1_1.done && (_a = errors_1.return)) _a.call(errors_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return response;
    };
    return GeoResponse;
}());
/**
 * @template T
 */
export { GeoResponse };
if (false) {
    /** @type {?} */
    GeoResponse.prototype.errors;
    /** @type {?} */
    GeoResponse.prototype.data;
    /** @type {?} */
    GeoResponse.prototype.metadata;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VvLXJlc3BvbnNlLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vd2Z0LWdlb2RiLWFuZ3VsYXItY2xpZW50LyIsInNvdXJjZXMiOlsibGliL21vZGVsL2dlby1yZXNwb25zZS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVBOzs7O0lBQUE7UUFDRSxXQUFNLEdBQWUsSUFBSSxLQUFLLEVBQVksQ0FBQztJQThCN0MsQ0FBQzs7Ozs7O0lBMUJRLHdCQUFZOzs7OztJQUFuQixVQUFvQixJQUFTLEVBQUUsUUFBYTs7WUFDcEMsUUFBUSxHQUFxQixJQUFJLFdBQVcsRUFBTztRQUV6RCxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNyQixRQUFRLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUU3QixPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDOzs7OztJQUVNLHlCQUFhOzs7O0lBQXBCLFVBQXFCLEtBQWU7O1lBQzVCLFFBQVEsR0FBcUIsSUFBSSxXQUFXLEVBQU87UUFFekQsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFNUIsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQzs7Ozs7SUFFTSwwQkFBYzs7OztJQUFyQixVQUFzQixNQUFrQjs7O1lBQ2hDLFFBQVEsR0FBcUIsSUFBSSxXQUFXLEVBQU87O1lBRXpELEtBQW9CLElBQUEsV0FBQSxpQkFBQSxNQUFNLENBQUEsOEJBQUEsa0RBQUU7Z0JBQXZCLElBQU0sS0FBSyxtQkFBQTtnQkFDZCxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUM3Qjs7Ozs7Ozs7O1FBRUQsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUNILGtCQUFDO0FBQUQsQ0FBQyxBQS9CRCxJQStCQzs7Ozs7OztJQTlCQyw2QkFBMkM7O0lBQzNDLDJCQUFROztJQUNSLCtCQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtHZW9FcnJvcn0gZnJvbSAnLi9nZW8tZXJyb3IubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgR2VvUmVzcG9uc2U8VD4ge1xuICBlcnJvcnM6IEdlb0Vycm9yW10gPSBuZXcgQXJyYXk8R2VvRXJyb3I+KCk7XG4gIGRhdGE6IFQ7XG4gIG1ldGFkYXRhOiBhbnk7XG5cbiAgc3RhdGljIGJ1aWxkRm9yRGF0YShkYXRhOiBhbnksIG1ldGFkYXRhOiBhbnkpOiBHZW9SZXNwb25zZTxhbnk+IHtcbiAgICBjb25zdCByZXNwb25zZTogR2VvUmVzcG9uc2U8YW55PiA9IG5ldyBHZW9SZXNwb25zZTxhbnk+KCk7XG5cbiAgICByZXNwb25zZS5kYXRhID0gZGF0YTtcbiAgICByZXNwb25zZS5tZXRhZGF0YSA9IG1ldGFkYXRhO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgc3RhdGljIGJ1aWxkRm9yRXJyb3IoZXJyb3I6IEdlb0Vycm9yKTogR2VvUmVzcG9uc2U8YW55PiB7XG4gICAgY29uc3QgcmVzcG9uc2U6IEdlb1Jlc3BvbnNlPGFueT4gPSBuZXcgR2VvUmVzcG9uc2U8YW55PigpO1xuXG4gICAgcmVzcG9uc2UuZXJyb3JzLnB1c2goZXJyb3IpO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgc3RhdGljIGJ1aWxkRm9yRXJyb3JzKGVycm9yczogR2VvRXJyb3JbXSk6IEdlb1Jlc3BvbnNlPGFueT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlOiBHZW9SZXNwb25zZTxhbnk+ID0gbmV3IEdlb1Jlc3BvbnNlPGFueT4oKTtcblxuICAgIGZvciAoY29uc3QgZXJyb3Igb2YgZXJyb3JzKSB7XG4gICAgICByZXNwb25zZS5lcnJvcnMucHVzaChlcnJvcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG59XG4iXX0=